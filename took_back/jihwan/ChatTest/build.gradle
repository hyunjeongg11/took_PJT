plugins {
    id 'java'  // Java 플러그인을 적용
    id 'org.springframework.boot' version '3.3.1'  // Spring Boot 플러그인을 적용, 버전 3.3.1 사용
    id 'io.spring.dependency-management' version '1.1.5'  // Spring 의존성 관리를 위한 플러그인 적용
}

group = 'org.example'  // 프로젝트 그룹 ID 설정
version = '0.0.1-SNAPSHOT'  // 프로젝트 버전 설정

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)  // Java 17 버전 사용 설정
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor  // annotationProcessor 설정을 compileOnly 설정에 포함
    }
}

repositories {
    mavenCentral()  // Maven Central Repository를 사용
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // Spring Data JPA 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'  // Spring Web 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'  // Spring WebSocket 의존성 추가
    compileOnly 'org.projectlombok:lombok'  // Lombok 의존성 추가 (컴파일 시에만 사용)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'  // 개발 도구 의존성 추가 (개발 환경에서만 사용)
    runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL 커넥터 의존성 추가 (실행 시에만 사용)
    annotationProcessor 'org.projectlombok:lombok'  // Lombok annotationProcessor 의존성 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot 테스트 의존성 추가
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 플랫폼 런처 의존성 추가 (테스트 실행 시에만 사용)

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'  // QueryDSL JPA 모듈 추가 (Jakarta 버전)
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"  // QueryDSL APT 설정 (Jakarta 버전)
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"  // Jakarta 어노테이션 API 추가
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"  // Jakarta Persistence API 추가
}

clean {
    delete file('src/main/generated')  // gradle clean 시에 QClass 디렉토리 삭제
}

tasks.named('test') {
    useJUnitPlatform()  // JUnit 플랫폼을 사용하여 테스트 실행
}
